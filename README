Okay, we've got our fancy url generators in Merb: (ruby)

  url(:blogs)
  resource(@blog, :format => :xml)
  
That's super cool. But then I find myself in the depths of javascript land.

Doing this: (javascript>

  jQuery.ajax({
    url: '/blogs/'+blog.id+'.xml'
  });
  
AHH, no! Why? Why why why! Must I die a thousand deaths for this crime?

No. Not anymore.

For I have written a naive url writer in javascript.

And it is a slice :D

add github as a gem source

  sudo gem install collin-merb_javascript_named_routes
  
cd to a merb app
edit config/dependencies

  dependency "collin-merb_javascript_named_routes"
  
  rake slices:merb_javascript_named_routes:install
  
edit config/router  

  slice(:merb_javascript_named_routes, :name_prefix => nil, :path_prefix => "")  
  
edit some view or application layout (haml)

  %script{:src => url(:routes) }

Go load up firebug :)
  
Now we can do this: (javascript)

  >> url(:blogs)
  => '/blogs'
  >> resource({'class': 'Blog', 'id': 44}, 'edit', {'format':'xml'})
  => '/blogs/44/edit.xml
  
Ahah! Fantastic! As long as we include the 'class' name in our serialized
objects we can pass them into the resource method.

--- boring implementation details ---

All this is namespaced behind a Merb object which will not clobber other Merb objects:

  Merb = Merb || {};
  
However, the two fun methods are aliased to window.

  window.url = Merb.url;
  window.resource = Merb.resource;
